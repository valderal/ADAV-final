"0",""
"0","# minior has two forms that it switches to if it falls below 50% HP, so the new"
"0","# capture rate value will be the average of the two forms"
"0","pokemon[774, ""capture_rate""] <- (30+255)/2"
"0",""
"0","# search for NA's and see if they need to be replaced or not"
"0","column_list <- colnames(pokemon)"
"0","item_count <- 1"
"0","for (col in column_list) {"
"0","  if (sum(is.na(pokemon[item_count])) == 0) {"
"0","    item_count <- item_count + 1"
"0","  } else {"
"0","      cat(col, "":\n"", sum(is.na(pokemon[item_count])), ""\n"")"
"0","      item_count <- item_count + 1"
"0","  }"
"0","}"
"1","type2"
"1"," "
"1",":
"
"1"," "
"1","384"
"1"," "
"1","
"
"1","height_m"
"1"," "
"1",":
"
"1"," "
"1","20"
"1"," "
"1","
"
"1","weight_kg"
"1"," "
"1",":
"
"1"," "
"1","20"
"1"," "
"1","
"
"0","# changing type2 NA's to be none, and adding pokemon to single_type dummy"
"0","pokemon$single_type <- 0"
"0","item_count <- 1"
"0","for (item in pokemon$type2) {"
"0","  if (is.na(item) == TRUE) {"
"0","    pokemon[item_count, ""type2""] <- ""none"""
"0","    pokemon[item_count, ""single_type""] <- 1"
"0","    item_count <- item_count + 1"
"0","  } else {"
"0","    item_count <- item_count + 1"
"0","  }"
"0","}"
"0",""
"0","# changing the NA's for height and weight to be filled with column mean"
"0","# Function to fill NaN values with column mean"
"0","fill_na_with_mean <- function(df, column) {"
"0","  df %>% "
"0","    mutate(!!sym(column) := ifelse(is.na(!!sym(column)), mean(!!sym(column), "
"0","                                                              na.rm = TRUE), "
"0","                                   !!sym(column)))"
"0","}  "
"0",""
"0","# Columns to fill NaN values"
"0","columns_to_fill <- c(""height_m"", ""weight_kg"")"
"0",""
"0","# Fill NaN values for each specified column"
"0","for (col in columns_to_fill) {"
"0","  pokemon <- fill_na_with_mean(pokemon, col)"
"0","}"
"0",""
"0","# add dummy variables for each type"
"0","all_values <- c(""poison"", ""flying"", ""dark"", ""electric"", ""ice"", ""ground"", ""fairy"", "
"0","                ""grass"", ""fighting"", ""psychic"", ""steel"", ""fire"", ""rock"", ""water"", "
"0","                ""dragon"", ""ghost"", ""bug"", ""normal"")"
"0",""
"0","# Create new columns for each value and fill with 1 or 0 based on type1 and type2"
"0","for (val in all_values) {"
"0","  pokemon <- pokemon %>%"
"0","    mutate(!!val := as.numeric(type1 == val | type2 == val))"
"0","}"
